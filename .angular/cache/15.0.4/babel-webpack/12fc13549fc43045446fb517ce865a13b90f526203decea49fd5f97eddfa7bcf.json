{"ast":null,"code":"import { map, switchMap } from \"rxjs\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FaceSnapsService {\n  constructor(http) {\n    this.http = http;\n    this.faceSnaps = [];\n  }\n  getAllFaceSnaps() {\n    return this.http.get(\"http://localhost:3000/facesnaps\");\n  }\n  getFaceSnapById(faceSnapId) {\n    return this.http.get(`http://localhost:3000/facesnaps/${faceSnapId}`);\n  }\n  snapFaceSnapById(faceSnapId, snapType) {\n    return this.getFaceSnapById(faceSnapId).pipe(map(faceSnap => ({\n      ...faceSnap,\n      snaps: faceSnap.snaps + (snapType === 'snap' ? 1 : -1)\n    })), switchMap(updatedFaceSnap => this.http.put(`http://localhost:3000/facesnaps/${faceSnapId}`, updatedFaceSnap)));\n  }\n  addFaceSnap(formValue) {\n    return this.getAllFaceSnaps().pipe(map(facesnaps => [...facesnaps].sort((a, b) => a.id - b.id)), map(sortedFacesnaps => sortedFacesnaps[sortedFacesnaps.length - 1]), map(previousFacesnap => ({\n      ...formValue,\n      snaps: 0,\n      createdDate: new Date(),\n      id: previousFacesnap.id + 1\n    })), switchMap(newFacesnap => this.http.post('http://localhost:3000/facesnaps', newFacesnap)));\n  }\n}\nFaceSnapsService.ɵfac = function FaceSnapsService_Factory(t) {\n  return new (t || FaceSnapsService)(i0.ɵɵinject(i1.HttpClient));\n};\nFaceSnapsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FaceSnapsService,\n  factory: FaceSnapsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAEA,SAASA,GAAG,EAAcC,SAAS,QAAQ,MAAM;;;AAOjD,OAAM,MAAOC,gBAAgB;EAE1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAEtB,cAAS,GAAc,EAAE;EAFW;EAInCC,eAAe;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,iCAAiC,CAAC;EACzE;EAEAC,eAAe,CAACC,UAAiB;IAC/B,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAW,mCAAmCE,UAAU,EAAE,CAAC;EACjF;EAEAC,gBAAgB,CAACD,UAAkB,EAAEE,QAA2B;IAC9D,OAAO,IAAI,CAACH,eAAe,CAACC,UAAU,CAAC,CAACG,IAAI,CAC1CX,GAAG,CAACY,QAAQ,KAAK;MACf,GAAGA,QAAQ;MACXC,KAAK,EAAED,QAAQ,CAACC,KAAK,IAAIH,QAAQ,KAAK,MAAM,GAAG,CAAC,GAAG,CAAC,CAAC;KACtD,CAAC,CAAC,EACDT,SAAS,CAACa,eAAe,IAAI,IAAI,CAACV,IAAI,CAACW,GAAG,CAAW,mCAAmCP,UAAU,EAAE,EAACM,eAAe,CAAC,CAAC,CACzH;EACH;EAEAE,WAAW,CAACC,SAAsF;IACpG,OAAO,IAAI,CAACZ,eAAe,EAAE,CAACM,IAAI,CAC7BX,GAAG,CAACkB,SAAS,IAAI,CAAC,GAAGA,SAAS,CAAC,CAACC,IAAI,CAAC,CAACC,CAAC,EAACC,CAAC,KAAKD,CAAC,CAACE,EAAE,GAAGD,CAAC,CAACC,EAAE,CAAC,CAAC,EAC3DtB,GAAG,CAACuB,eAAe,IAAIA,eAAe,CAACA,eAAe,CAACC,MAAM,GAAG,CAAC,CAAC,CAAC,EACnExB,GAAG,CAACyB,gBAAgB,KAAK;MACtB,GAAGR,SAAS;MACZJ,KAAK,EAAE,CAAC;MACRa,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBL,EAAE,EAAEG,gBAAgB,CAACH,EAAE,GAAG;KAC7B,CAAC,CAAC,EACHrB,SAAS,CAAC2B,WAAW,IAAI,IAAI,CAACxB,IAAI,CAACyB,IAAI,CACnC,iCAAiC,EACjCD,WAAW,CAAC,CACf,CACJ;EACH;;AAvCW1B,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAA4B,SAAhB5B,gBAAgB;EAAA6B,YAHb;AAAM","names":["map","switchMap","FaceSnapsService","constructor","http","getAllFaceSnaps","get","getFaceSnapById","faceSnapId","snapFaceSnapById","snapType","pipe","faceSnap","snaps","updatedFaceSnap","put","addFaceSnap","formValue","facesnaps","sort","a","b","id","sortedFacesnaps","length","previousFacesnap","createdDate","Date","newFacesnap","post","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/Documents/AngularMed/src/app/services/face-snaps.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { map, Observable, switchMap } from \"rxjs\";\nimport { FaceSnap } from \"../core/models/face-snap-model\";\n\n@Injectable({\n    providedIn: 'root'\n}\n)\nexport class FaceSnapsService{\n\n   constructor(private http: HttpClient){}\n\n     faceSnaps: FaceSnap[] =[];\n          \n      getAllFaceSnaps(): Observable<FaceSnap[]>{\n            return this.http.get<FaceSnap[]>(\"http://localhost:3000/facesnaps\");\n      }\n\n      getFaceSnapById(faceSnapId:number): Observable<FaceSnap>{\n        return this.http.get<FaceSnap>(`http://localhost:3000/facesnaps/${faceSnapId}`)\n      }\n\n      snapFaceSnapById(faceSnapId: number, snapType: 'snap' | 'unsnap' ): Observable<FaceSnap> {\n        return this.getFaceSnapById(faceSnapId).pipe(\n          map(faceSnap => ({\n            ...faceSnap,\n            snaps: faceSnap.snaps + (snapType === 'snap' ? 1 : -1)\n          })),\n            switchMap(updatedFaceSnap => this.http.put<FaceSnap>(`http://localhost:3000/facesnaps/${faceSnapId}`,updatedFaceSnap))\n        );\n      }\n\n      addFaceSnap(formValue: { title: string, description: string, imageUrl: string, location?: string }): Observable<FaceSnap> {\n    return this.getAllFaceSnaps().pipe(\n         map(facesnaps => [...facesnaps].sort((a,b) => a.id - b.id)),\n         map(sortedFacesnaps => sortedFacesnaps[sortedFacesnaps.length - 1]),\n         map(previousFacesnap => ({\n            ...formValue,\n            snaps: 0,\n            createdDate: new Date(),\n            id: previousFacesnap.id + 1\n        })),\n        switchMap(newFacesnap => this.http.post<FaceSnap>(\n            'http://localhost:3000/facesnaps',\n            newFacesnap)\n        )\n    );\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}