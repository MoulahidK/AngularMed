{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class FaceSnapsService {\n  constructor(http) {\n    this.http = http;\n    this.faceSnaps = [];\n  }\n  getAllFaceSnaps() {\n    return this.http.get(\"http://localhost:3000/facesnaps\");\n  }\n  getFaceSnapById(faceSnapId) {\n    const faceSnap = this.faceSnaps.find(faceSnap => faceSnapId === faceSnap.id);\n    if (!faceSnap) {\n      throw new Error('Id not found');\n    } else {\n      return faceSnap;\n    }\n  }\n  snapFaceSnapById(faceSnapId, snapType) {\n    // const faceSnap = this.getFaceSnapById(faceSnapId);\n    // snapType === 'snap' ? faceSnap.snaps++ : faceSnap.snaps--;\n  }\n  addFaceSnap(formValue) {\n    const faceSnap = {\n      ...formValue,\n      snaps: 0,\n      createdDate: new Date(),\n      id: this.faceSnaps[this.faceSnaps.length - 1].id + 1\n    };\n    this.faceSnaps.push(faceSnap);\n  }\n}\nFaceSnapsService.ɵfac = function FaceSnapsService_Factory(t) {\n  return new (t || FaceSnapsService)(i0.ɵɵinject(i1.HttpClient));\n};\nFaceSnapsService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FaceSnapsService,\n  factory: FaceSnapsService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AASA,OAAM,MAAOA,gBAAgB;EAE1BC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAEtB,cAAS,GAAc,EAAE;EAFW;EAInCC,eAAe;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAa,iCAAiC,CAAC;EACzE;EAEAC,eAAe,CAACC,UAAiB;IAC/B,MAAMC,QAAQ,GAAG,IAAI,CAACC,SAAS,CAACC,IAAI,CAACF,QAAQ,IAAID,UAAU,KAAKC,QAAQ,CAACG,EAAE,CAAC;IAC5E,IAAG,CAACH,QAAQ,EAAC;MACT,MAAM,IAAII,KAAK,CAAC,cAAc,CAAC;KAClC,MACG;MACA,OAAOJ,QAAQ;;EAErB;EAEAK,gBAAgB,CAACN,UAAkB,EAAEO,QAA2B;IAC9D;IACA;EAAA;EAIFC,WAAW,CAACC,SAAsF;IAChG,MAAMR,QAAQ,GAAa;MACvB,GAAGQ,SAAS;MACZC,KAAK,EAAE,CAAC;MACRC,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBR,EAAE,EAAE,IAAI,CAACF,SAAS,CAAC,IAAI,CAACA,SAAS,CAACW,MAAM,GAAG,CAAC,CAAC,CAACT,EAAE,GAAG;KACtD;IACD,IAAI,CAACF,SAAS,CAACY,IAAI,CAACb,QAAQ,CAAC;EACjC;;AAlCSP,gBAAgB;mBAAhBA,gBAAgB;AAAA;AAAhBA,gBAAgB;SAAhBA,gBAAgB;EAAAqB,SAAhBrB,gBAAgB;EAAAsB,YAHb;AAAM","names":["FaceSnapsService","constructor","http","getAllFaceSnaps","get","getFaceSnapById","faceSnapId","faceSnap","faceSnaps","find","id","Error","snapFaceSnapById","snapType","addFaceSnap","formValue","snaps","createdDate","Date","length","push","factory","providedIn"],"sourceRoot":"","sources":["/Users/macbookpro/Documents/AngularMed/src/app/services/face-snaps.service.ts"],"sourcesContent":["import { HttpClient } from \"@angular/common/http\";\nimport { Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { FaceSnap } from \"../models/face-snap-model\";\n\n@Injectable({\n    providedIn: 'root'\n}\n)\nexport class FaceSnapsService{\n\n   constructor(private http: HttpClient){}\n\n     faceSnaps: FaceSnap[] =[];\n          \n      getAllFaceSnaps(): Observable<FaceSnap[]>{\n            return this.http.get<FaceSnap[]>(\"http://localhost:3000/facesnaps\");\n      }\n\n      getFaceSnapById(faceSnapId:number): FaceSnap{\n        const faceSnap = this.faceSnaps.find(faceSnap => faceSnapId === faceSnap.id);\n        if(!faceSnap){\n            throw new Error('Id not found'); \n        }\n        else{\n            return faceSnap;\n        }\n      }\n\n      snapFaceSnapById(faceSnapId: number, snapType: 'snap' | 'unsnap' ): void {\n        // const faceSnap = this.getFaceSnapById(faceSnapId);\n        // snapType === 'snap' ? faceSnap.snaps++ : faceSnap.snaps--;\n      \n      }\n\n      addFaceSnap(formValue: { title: string, description: string, imageUrl: string, location?: string }) {\n        const faceSnap: FaceSnap = {\n            ...formValue,\n            snaps: 0,\n            createdDate: new Date(),\n            id: this.faceSnaps[this.faceSnaps.length - 1].id + 1\n        };\n        this.faceSnaps.push(faceSnap);\n    }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}