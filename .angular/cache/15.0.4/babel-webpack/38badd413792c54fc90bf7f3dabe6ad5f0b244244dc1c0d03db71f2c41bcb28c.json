{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { map, tap } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/core/services/face-snaps.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nfunction NewFaceSnapComponent_div_23_p_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const faceSnap_r1 = i0.ɵɵnextContext().ngIf;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"Photo prise \\u00E0 \", faceSnap_r1.location, \"\");\n  }\n}\nfunction NewFaceSnapComponent_div_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 14)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵpipe(3, \"uppercase\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"p\");\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"date\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, NewFaceSnapComponent_div_23_p_9_Template, 2, 1, \"p\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const faceSnap_r1 = ctx.ngIf;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(3, 4, faceSnap_r1.title));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Mis en ligne \", i0.ɵɵpipeBind2(6, 6, faceSnap_r1.createdDate, \"\\u00E0 HH:mm, le d MMMM yyyy\"), \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(faceSnap_r1.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", faceSnap_r1.location);\n  }\n}\nexport class NewFaceSnapComponent {\n  constructor(formBuilder, faceSnapsService, router) {\n    this.formBuilder = formBuilder;\n    this.faceSnapsService = faceSnapsService;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.urlRegex = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)/;\n    this.snapForm = this.formBuilder.group({\n      title: [null, Validators.required],\n      description: [null, Validators.required],\n      imgUrl: [null, Validators.required, Validators.pattern(this.urlRegex)],\n      location: [null]\n    }, {\n      updateOn: 'blur'\n    });\n    this.faceSnapPreview$ = this.snapForm.valueChanges.pipe(map(formValue => ({\n      ...formValue,\n      createdDate: new Date(),\n      id: 0,\n      snaps: 0\n    })));\n  }\n  onSubmitForm() {\n    this.faceSnapsService.addFaceSnap(this.snapForm.value).pipe(tap(() => this.router.navigateByUrl('/facesnaps'))).subscribe();\n  }\n}\nNewFaceSnapComponent.ɵfac = function NewFaceSnapComponent_Factory(t) {\n  return new (t || NewFaceSnapComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.FaceSnapsService), i0.ɵɵdirectiveInject(i3.Router));\n};\nNewFaceSnapComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: NewFaceSnapComponent,\n  selectors: [[\"app-new-face-snap\"]],\n  decls: 25,\n  vars: 5,\n  consts: [[1, \"form-card\"], [3, \"formGroup\"], [1, \"form-group\"], [\"for\", \"title\"], [\"type\", \"text\", \"id\", \"title\", \"formControlName\", \"title\"], [\"for\", \"description\"], [\"type\", \"text\", \"id\", \"description\", \"formControlName\", \"description\"], [\"for\", \"imgUrl\"], [\"type\", \"text\", \"id\", \"imgUrl\", \"formControlName\", \"imgUrl\"], [\"for\", \"location\"], [\"type\", \"text\", \"id\", \"location\", \"formControlName\", \"location\"], [1, \"action-buttons\"], [\"type\", \"submit\", 3, \"disabled\", \"click\"], [\"class\", \"face-snap-card\", 4, \"ngIf\"], [1, \"face-snap-card\"], [4, \"ngIf\"]],\n  template: function NewFaceSnapComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\");\n      i0.ɵɵtext(2, \"Nouveau facesnape\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"form\", 1)(4, \"div\", 2)(5, \"label\", 3);\n      i0.ɵɵtext(6, \"Titre\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(7, \"input\", 4);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\", 5);\n      i0.ɵɵtext(10, \"Description\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(11, \"textarea\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(12, \"div\", 2)(13, \"label\", 7);\n      i0.ɵɵtext(14, \"URL de l'image\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(15, \"input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(16, \"div\", 2)(17, \"label\", 9);\n      i0.ɵɵtext(18, \"Lieu\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(19, \"input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"div\", 11)(21, \"button\", 12);\n      i0.ɵɵlistener(\"click\", function NewFaceSnapComponent_Template_button_click_21_listener() {\n        return ctx.onSubmitForm();\n      });\n      i0.ɵɵtext(22, \"Enregistrer\");\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵtemplate(23, NewFaceSnapComponent_div_23_Template, 10, 9, \"div\", 13);\n      i0.ɵɵpipe(24, \"async\");\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.snapForm);\n      i0.ɵɵadvance(18);\n      i0.ɵɵproperty(\"disabled\", ctx.snapForm.invalid);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(24, 3, ctx.faceSnapPreview$));\n    }\n  },\n  dependencies: [i4.NgIf, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName, i4.AsyncPipe, i4.UpperCasePipe, i4.DatePipe],\n  styles: [\".form-card[_ngcontent-%COMP%], .face-snap-card[_ngcontent-%COMP%] {\\n  box-sizing: border-box;\\n  width: 50%;\\n  margin: 20px auto;\\n  padding: 10px 30px;\\n  box-shadow: lightcoral 4px 4px 20px;\\n  color: lightcoral;\\n}\\n\\n.face-snap-card[_ngcontent-%COMP%]   img[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n.face-snap-card[_ngcontent-%COMP%]   h2[_ngcontent-%COMP%] {\\n  margin-bottom: 0;\\n}\\n.face-snap-card[_ngcontent-%COMP%]   p[_ngcontent-%COMP%] {\\n  font-weight: 300;\\n  font-size: 16px;\\n}\\n\\n.form-group[_ngcontent-%COMP%] {\\n  margin: 10px auto;\\n  width: 80%;\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n}\\n\\ninput[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%] {\\n  width: 50%;\\n}\\n\\n.action-buttons[_ngcontent-%COMP%] {\\n  width: 100%;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  display: block;\\n  margin: 20px auto;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvZmFjZS1zbmFwcy9jb21wb25lbnRzL25ldy1mYWNlLXNuYXAvbmV3LWZhY2Utc25hcC5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNJLHNCQUFBO0VBQ0EsVUFBQTtFQUNBLGlCQUFBO0VBQ0Esa0JBQUE7RUFDQSxtQ0FBQTtFQUNBLGlCQUFBO0FBQ0o7O0FBRUk7RUFDRSxXQUFBO0FBQ047QUFDSTtFQUNFLGdCQUFBO0FBQ047QUFDSTtFQUNFLGdCQUFBO0VBQ0EsZUFBQTtBQUNOOztBQUVFO0VBQ0UsaUJBQUE7RUFDQSxVQUFBO0VBQ0EsYUFBQTtFQUNBLG1CQUFBO0VBQ0EsOEJBQUE7QUFDSjs7QUFFRTtFQUNFLFVBQUE7QUFDSjs7QUFFRTtFQUNFLFdBQUE7QUFDSjs7QUFFRTtFQUNFLGNBQUE7RUFDQSxpQkFBQTtBQUNKIiwic291cmNlc0NvbnRlbnQiOlsiLmZvcm0tY2FyZCwgLmZhY2Utc25hcC1jYXJkIHtcbiAgICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICAgIHdpZHRoOiA1MCU7XG4gICAgbWFyZ2luOiAyMHB4IGF1dG87XG4gICAgcGFkZGluZzogMTBweCAzMHB4O1xuICAgIGJveC1zaGFkb3c6IGxpZ2h0Y29yYWwgNHB4IDRweCAyMHB4O1xuICAgIGNvbG9yOiBsaWdodGNvcmFsO1xuICB9XG4gIC5mYWNlLXNuYXAtY2FyZCB7XG4gICAgaW1nIHtcbiAgICAgIHdpZHRoOiAxMDAlO1xuICAgIH1cbiAgICBoMiB7XG4gICAgICBtYXJnaW4tYm90dG9tOiAwO1xuICAgIH1cbiAgICBwIHtcbiAgICAgIGZvbnQtd2VpZ2h0OiAzMDA7XG4gICAgICBmb250LXNpemU6IDE2cHg7XG4gICAgfVxuICB9XG4gIC5mb3JtLWdyb3VwIHtcbiAgICBtYXJnaW46IDEwcHggYXV0bztcbiAgICB3aWR0aDogODAlO1xuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24taXRlbXM6IGNlbnRlcjtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47XG4gIH1cbiAgXG4gIGlucHV0LCB0ZXh0YXJlYSB7XG4gICAgd2lkdGg6IDUwJTtcbiAgfVxuICBcbiAgLmFjdGlvbi1idXR0b25zIHtcbiAgICB3aWR0aDogMTAwJTtcbiAgfVxuICBcbiAgYnV0dG9uIHtcbiAgICBkaXNwbGF5OiBibG9jaztcbiAgICBtYXJnaW46IDIwcHggYXV0bztcbiAgfSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n});","map":{"version":3,"mappings":"AACA,SAAiCA,UAAU,QAAQ,gBAAgB;AAEnE,SAASC,GAAG,EAAcC,GAAG,QAAQ,MAAM;;;;;;;;IC2BvCC,yBAA6B;IAAAA,YAAqC;IAAAA,iBAAI;;;;IAAzCA,eAAqC;IAArCA,sEAAqC;;;;;IALtEA,+BAAyE;IACjEA,YAAgC;;IAAAA,iBAAK;IACzCA,yBAAG;IAAAA,YAAyE;;IAAAA,iBAAI;IAEhFA,yBAAG;IAAAA,YAA0B;IAAAA,iBAAI;IACjCA,yEAAsE;IAC1EA,iBAAM;;;;IALEA,eAAgC;IAAhCA,6DAAgC;IACjCA,eAAyE;IAAzEA,yHAAyE;IAEzEA,eAA0B;IAA1BA,6CAA0B;IACzBA,eAAuB;IAAvBA,2CAAuB;;;ADjB/B,OAAM,MAAOC,oBAAoB;EAK/BC,YAAoBC,WAAwB,EAAUC,gBAAkC,EAAUC,MAAc;IAA5F,gBAAW,GAAXF,WAAW;IAAuB,qBAAgB,GAAhBC,gBAAgB;IAA4B,WAAM,GAANC,MAAM;EACxG;EAGAC,QAAQ;IACN,IAAI,CAACC,QAAQ,GAAG,gGAAgG;IAChH,IAAI,CAACC,QAAQ,GAAG,IAAI,CAACL,WAAW,CAACM,KAAK,CAAC;MACrCC,KAAK,EAAE,CAAC,IAAI,EAAEb,UAAU,CAACc,QAAQ,CAAC;MAClCC,WAAW,EAAE,CAAC,IAAI,EAAEf,UAAU,CAACc,QAAQ,CAAC;MACxCE,MAAM,EAAE,CAAC,IAAI,EAAEhB,UAAU,CAACc,QAAQ,EAAEd,UAAU,CAACiB,OAAO,CAAC,IAAI,CAACP,QAAQ,CAAC,CAAC;MACtEQ,QAAQ,EAAE,CAAC,IAAI;KAChB,EAAC;MACAC,QAAQ,EAAG;KACZ,CAAC;IACF,IAAI,CAACC,gBAAgB,GAAG,IAAI,CAACT,QAAQ,CAACU,YAAY,CAACC,IAAI,CACrDrB,GAAG,CAACsB,SAAS,KAAK;MAChB,GAAGA,SAAS;MACZC,WAAW,EAAE,IAAIC,IAAI,EAAE;MACvBC,EAAE,EAAE,CAAC;MACLC,KAAK,EAAC;KACP,CAAC,CAAC,CACJ;EACH;EAEAC,YAAY;IACV,IAAI,CAACrB,gBAAgB,CAACsB,WAAW,CAAC,IAAI,CAAClB,QAAQ,CAACmB,KAAK,CAAC,CAACR,IAAI,CACvDpB,GAAG,CAAC,MAAM,IAAI,CAACM,MAAM,CAACuB,aAAa,CAAC,YAAY,CAAC,CAAC,CACrD,CAACC,SAAS,EAAE;EACjB;;AAjCa5B,oBAAoB;mBAApBA,oBAAoB;AAAA;AAApBA,oBAAoB;QAApBA,oBAAoB;EAAA6B;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCbjClC,8BAAuB;MACfA,iCAAiB;MAAAA,iBAAK;MAC1BA,+BAA6B;MAEFA,qBAAK;MAAAA,iBAAQ;MAChCA,2BAAsD;MAC1DA,iBAAM;MACNA,8BAAwB;MACKA,4BAAW;MAAAA,iBAAQ;MAC5CA,+BAAgF;MACpFA,iBAAM;MACNA,+BAAwB;MACAA,+BAAc;MAAAA,iBAAQ;MAC1CA,4BAAwD;MAC5DA,iBAAM;MACNA,+BAAwB;MACEA,qBAAI;MAAAA,iBAAQ;MAClCA,6BAA4D;MAChEA,iBAAM;MACNA,gCAA4B;MACFA;QAAA,OAASmC,kBAAc;MAAA,EAAC;MAA+BnC,4BAAW;MAAAA,iBAAS;MAK7GA,yEAMM;;;;MA7BIA,eAAsB;MAAtBA,wCAAsB;MAkB2BA,gBAA6B;MAA7BA,+CAA6B;MAK3DA,eAA+B;MAA/BA,kEAA+B","names":["Validators","map","tap","i0","NewFaceSnapComponent","constructor","formBuilder","faceSnapsService","router","ngOnInit","urlRegex","snapForm","group","title","required","description","imgUrl","pattern","location","updateOn","faceSnapPreview$","valueChanges","pipe","formValue","createdDate","Date","id","snaps","onSubmitForm","addFaceSnap","value","navigateByUrl","subscribe","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/Users/macbookpro/Documents/AngularMed/src/app/face-snaps/components/new-face-snap/new-face-snap.component.ts","/Users/macbookpro/Documents/AngularMed/src/app/face-snaps/components/new-face-snap/new-face-snap.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Route, Router } from '@angular/router';\nimport { map, Observable, tap } from 'rxjs';\nimport { FaceSnap } from 'src/app/core/models/face-snap-model';\nimport { FaceSnapsService } from 'src/app/core/services/face-snaps.service';\n\n\n@Component({\n  selector: 'app-new-face-snap',\n  templateUrl: './new-face-snap.component.html',\n  styleUrls: ['./new-face-snap.component.scss']\n})\nexport class NewFaceSnapComponent implements OnInit {\n\n  snapForm!: FormGroup;\n  faceSnapPreview$!: Observable<FaceSnap>;\n  urlRegex!: RegExp;\n  constructor(private formBuilder: FormBuilder, private faceSnapsService: FaceSnapsService, private router: Router) {\n  }\n  \n\n  ngOnInit() {\n    this.urlRegex = /(http(s)?:\\/\\/.)?(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&/=]*)/;\n    this.snapForm = this.formBuilder.group({\n      title: [null, Validators.required],\n      description: [null, Validators.required],\n      imgUrl: [null, Validators.required, Validators.pattern(this.urlRegex)],\n      location: [null],\n    },{\n      updateOn : 'blur'\n    });\n    this.faceSnapPreview$ = this.snapForm.valueChanges.pipe(\n      map(formValue => ({\n        ...formValue,\n        createdDate: new Date(),\n        id: 0,\n        snaps:0\n      }))\n    );\n  }\n  \n  onSubmitForm() {\n    this.faceSnapsService.addFaceSnap(this.snapForm.value).pipe(\n        tap(() => this.router.navigateByUrl('/facesnaps'))\n    ).subscribe();\n}\n}\n","<div class=\"form-card\">\n    <h2>Nouveau facesnape</h2>\n    <form [formGroup]=\"snapForm\">\n        <div class=\"form-group\">\n            <label for=\"title\">Titre</label>\n            <input type=\"text\" id=\"title\" formControlName=\"title\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"description\">Description</label>\n            <textarea type=\"text\" id=\"description\" formControlName=\"description\"></textarea>\n        </div>\n        <div class=\"form-group\">\n            <label for=\"imgUrl\">URL de l'image</label>\n            <input type=\"text\" id=\"imgUrl\" formControlName=\"imgUrl\">\n        </div>\n        <div class=\"form-group\">\n            <label for=\"location\">Lieu</label>\n            <input type=\"text\" id=\"location\" formControlName=\"location\">\n        </div>\n        <div class=\"action-buttons\">\n            <button type=\"submit\" (click)=\"onSubmitForm()\" [disabled]=\"snapForm.invalid\">Enregistrer</button>\n        </div>\n    </form>\n</div>\n\n<div class=\"face-snap-card\" *ngIf=\"faceSnapPreview$ | async as faceSnap\">\n    <h2>{{ faceSnap.title | uppercase }}</h2>\n    <p>Mis en ligne {{ faceSnap.createdDate | date: 'à HH:mm, le d MMMM yyyy' }}</p>\n    <!--img [src]=\"faceSnap.imageUrl\" [alt]=\"faceSnap.title\"-->\n    <p>{{ faceSnap.description }}</p>\n    <p *ngIf=\"faceSnap.location\">Photo prise à {{ faceSnap.location }}</p>\n</div>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}